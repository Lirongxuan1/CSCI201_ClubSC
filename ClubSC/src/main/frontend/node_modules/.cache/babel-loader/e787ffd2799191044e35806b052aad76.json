{"ast":null,"code":"import _regeneratorRuntime from\"/Users/cdrlao/Desktop/ClubSC/ClubSC/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/cdrlao/Desktop/ClubSC/ClubSC/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/cdrlao/Desktop/ClubSC/ClubSC/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState,useEffect}from'react';import Post from'../components/Post';import ContainerView from'../components/ContainerView';import axios from'axios';import{authHeader}from'../App';var UserDashboard=function UserDashboard(_ref){var onTermChange=_ref.onTermChange,user=_ref.user;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),announcements=_useState2[0],setAnnouncements=_useState2[1];useEffect(function(){if(!user||user.roles.includes('ROLE_CLUB')){window.history.pushState({},'','/');var navEvent=new PopStateEvent('popstate');window.dispatchEvent(navEvent);}});useEffect(function(){var search=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(\"http://localhost:8080/app/studentfeed\",{headers:authHeader()});case 2:_yield$axios$get=_context.sent;data=_yield$axios$get.data;setAnnouncements(data);case 5:case\"end\":return _context.stop();}}},_callee);}));return function search(){return _ref2.apply(this,arguments);};}();search();},[]);var renderedAnnouncements=announcements.map(function(a){console.log(a);return/*#__PURE__*/_jsx(Post,{club:a.clubid,timestamp:a.timestamp,children:/*#__PURE__*/_jsx(\"p\",{children:a.body})},a.postid);});return/*#__PURE__*/_jsx(ContainerView,{search:true,onTermChange:onTermChange,user:user,children:/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:renderedAnnouncements})});};export default UserDashboard;","map":{"version":3,"sources":["/Users/cdrlao/Desktop/ClubSC/ClubSC/src/main/frontend/src/pages/UserDashboard.js"],"names":["React","useState","useEffect","Post","ContainerView","axios","authHeader","UserDashboard","onTermChange","user","announcements","setAnnouncements","roles","includes","window","history","pushState","navEvent","PopStateEvent","dispatchEvent","search","get","headers","data","renderedAnnouncements","map","a","console","log","clubid","timestamp","body","postid"],"mappings":"4iBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,QAA3B,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAA4B,IAAzBC,CAAAA,YAAyB,MAAzBA,YAAyB,CAAXC,IAAW,MAAXA,IAAW,eACNR,QAAQ,CAAC,EAAD,CADF,wCACzCS,aADyC,eAC1BC,gBAD0B,eAGhDT,SAAS,CAAC,UAAM,CACd,GAAG,CAACO,IAAD,EAASA,IAAI,CAACG,KAAL,CAAWC,QAAX,CAAoB,WAApB,CAAZ,CAA6C,CAC3CC,MAAM,CAACC,OAAP,CAAeC,SAAf,CAAyB,EAAzB,CAA6B,EAA7B,CAAiC,GAAjC,EACA,GAAMC,CAAAA,QAAQ,CAAG,GAAIC,CAAAA,aAAJ,CAAkB,UAAlB,CAAjB,CACAJ,MAAM,CAACK,aAAP,CAAqBF,QAArB,EACD,CACF,CANQ,CAAT,CAQAf,SAAS,CAAC,UAAM,CACd,GAAMkB,CAAAA,MAAM,2FAAG,mLACUf,CAAAA,KAAK,CAACgB,GAAN,CAAU,uCAAV,CACrB,CAAEC,OAAO,CAAEhB,UAAU,EAArB,CADqB,CADV,uCACLiB,IADK,kBACLA,IADK,CAIbZ,gBAAgB,CAACY,IAAD,CAAhB,CAJa,sDAAH,kBAANH,CAAAA,MAAM,2CAAZ,CAOAA,MAAM,GACP,CATQ,CASN,EATM,CAAT,CAaA,GAAMI,CAAAA,qBAAqB,CAAGd,aAAa,CAACe,GAAd,CAAkB,SAACC,CAAD,CAAO,CACrDC,OAAO,CAACC,GAAR,CAAYF,CAAZ,EAEA,mBACE,KAAC,IAAD,EAAM,IAAI,CAAEA,CAAC,CAACG,MAAd,CAAqC,SAAS,CAAEH,CAAC,CAACI,SAAlD,uBACE,mBAAIJ,CAAC,CAACK,IAAN,EADF,EAA2BL,CAAC,CAACM,MAA7B,CADF,CAKD,CAR6B,CAA9B,CAUA,mBACE,KAAC,aAAD,EAAe,MAAM,CAAE,IAAvB,CAA6B,YAAY,CAAExB,YAA3C,CAAyD,IAAI,CAAEC,IAA/D,uBACE,YAAK,SAAS,CAAC,WAAf,UACGe,qBADH,EADF,EADF,CAOD,CAzCD,CA2CA,cAAejB,CAAAA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Post from '../components/Post';\nimport ContainerView from '../components/ContainerView';\nimport axios from 'axios';\nimport { authHeader } from '../App';\n\nconst UserDashboard = ({ onTermChange, user }) => {\n  const [announcements, setAnnouncements] = useState([]);\n\n  useEffect(() => {\n    if(!user || user.roles.includes('ROLE_CLUB')){\n      window.history.pushState({}, '', '/');\n      const navEvent = new PopStateEvent('popstate');\n      window.dispatchEvent(navEvent);\n    }\n  });\n\n  useEffect(() => {\n    const search = async () => {\n      const { data } = await axios.get(\"http://localhost:8080/app/studentfeed\",\n        { headers: authHeader() });\n\n      setAnnouncements(data);\n    }\n\n    search();\n  }, []);\n\n\n\n  const renderedAnnouncements = announcements.map((a) => {\n    console.log(a);\n\n    return (\n      <Post club={a.clubid} key={a.postid} timestamp={a.timestamp}>\n        <p>{a.body}</p>\n      </Post>\n    );\n  });\n\n  return (\n    <ContainerView search={true} onTermChange={onTermChange} user={user}>\n      <div className=\"container\">\n        {renderedAnnouncements}\n      </div>\n    </ContainerView>\n  );\n};\n\nexport default UserDashboard;\n"]},"metadata":{},"sourceType":"module"}